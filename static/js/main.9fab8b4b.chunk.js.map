{"version":3,"sources":["components/Title.js","components/RealBtn.js","components/FakeBtn.js","components/Progress.js","components/Start.js","components/GameOver.js","components/StartMemes.js","components/FailMemes.js","App.js","index.js"],"names":["Title","_ref","image","title","react_default","a","createElement","Fragment","className","src","RealBtn","handleRealBtn","onClick","FakeBtn","handleFakeBtn","Progress","count","all","style","padding","Modal","start","memes","class","alt","handleTryAgain","endMemes","startMeme","fail","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","posts","subreddit","url","timer","gameOver","startMemes","StartMeme","Math","floor","random","length","FailMeme","render","bind","assertThisInitialized","handleStart","evt","randomizer","Randomize","setState","newPost","console","log","data","concat","thumbnail","randPost","window","location","reload","_this2","axios","get","then","response","myArr","children","GameOver","components_Title","components_RealBtn","components_FakeBtn","components_Progress","Start","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9fab8b4b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Title = ({ image, title }) => {\r\n  return (\r\n    <React.Fragment>\r\n    <div className=\"box\">\r\n            <article className=\"tile is-child notification\">\r\n              <p className=\"title has-text-centered\">{title}</p>\r\n              <div className='container has-text-centered'>  \r\n              <img src={image}/>\r\n              </div>\r\n            </article>\r\n         </div>\r\n         \r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import React from 'react'\r\n\r\nconst RealBtn = ({handleRealBtn}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='column has-text-centered'>\r\n        <a onClick={handleRealBtn} className='button is-info is-large is-fullwidth'>Real News</a>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RealBtn\r\n","import React from 'react'\r\n\r\nconst FakeBtn = ({handleFakeBtn}) => {\r\n  return (\r\n  <React.Fragment>\r\n    <div className='column has-text-centered'>\r\n      <a onClick={handleFakeBtn} className='button is-danger is-large is-fullwidth'>Fake News</a>\r\n    </div>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default FakeBtn\r\n","import React from 'react'\r\n\r\nconst Progress = ({count, all}) => {\r\n  return (\r\n    <React.Fragment>\r\n       <div className='section is-centered is-mobile box' style={{  padding: '10px 0 10px 0' }}>\r\n          <div className='columns has-text-centered'> \r\n           <div className='column'>\r\n             <h1 className='title is-4'>Number Correct in a row! : <span className='title is-1'>{count}/{all}</span></h1>\r\n           </div>\r\n         </div>\r\n         </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Progress\r\n","import React from 'react'\r\n\r\nconst Modal = ({start, memes}) => {\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <div class=\"modal is-active\">\r\n        <div class=\"modal-background\"></div>\r\n        <header className='modal-card-head'>\r\n          <p className='modal-card-title'>REAL OR FAKE NEWS</p>\r\n        </header>\r\n        <header className='modal-card-head '>\r\n          <p className='modal-card-title '>Can you correctly guess <br/>at least 10 in a row?</p>\r\n        </header>\r\n          <div class=\"modal-content\">\r\n            <p class=\"image\">\r\n              <img src={memes} alt=\"\"/>\r\n            </p>\r\n        </div>\r\n        <footer>\r\n          <button onClick={start} className='button is-success'>LET'S GO!</button>\r\n        </footer>\r\n      </div>\r\n    </React.Fragment>\r\n   \r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nconst Modal = ({ handleTryAgain, endMemes }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"modal is-active\">\r\n        <div class=\"modal-background\"></div>\r\n          <div class=\"modal-content\">\r\n            <p class=\"image is-4by3\">\r\n              <img src={endMemes} alt=\"\"/>\r\n            </p>\r\n        </div>\r\n        <footer>\r\n          <button onClick={handleTryAgain} className='button is-danger'>Try Again!</button>\r\n        </footer>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","const startMeme = [       \r\n  'https://i.redd.it/k4p6vs2pjcl21.jpg',          \r\n  'https://s3.amazonaws.com/libapps/accounts/63707/images/21392935.jpg',          \r\n  'http://uniteordie-usa.com/wp-content/uploads/2018/03/Fake-News-was-Fake-News-600x483.jpg',          \r\n  'https://memegenerator.net/img/instances/76132312/its-not-fake-news-if-you-believe-it.jpg',          \r\n  'http://www.quickmeme.com/img/dc/dc0661cfb308e3d978496f460e3f014c7e624c85239fbe6b96dab69fbd0c2713.jpg',          \r\n  'https://i.imgflip.com/25d69t.jpg',          \r\n  'https://i.imgflip.com/25dfr7.jpg',          \r\n  'https://media0.giphy.com/media/OqAeQrGmU7lS6tENnQ/giphy.gif',          \r\n  'https://meme.xyz/uploads/posts/t/l-21806-you-are-fake-news.jpg',          \r\n  'https://i.imgflip.com/22g6az.jpg',          \r\n  'https://miro.medium.com/max/962/1*aiVVFTXm1X_kdPfpzRG4-Q.png'       \r\n]\r\n\r\nexport default startMeme","const fail = [\r\n  'https://i.kym-cdn.com/photos/images/original/000/613/716/41c.jpg',\r\n  'https://sayingimages.com/wp-content/uploads/good-fail-meme.png',          \r\n  'https://i.redd.it/d10a8ams69f21.png',          \r\n  'https://media.giphy.com/media/3oz8xLd9DJq2l2VFtu/giphy.gif',          \r\n  'https://media.giphy.com/media/Yth2zWqeTdqAo/giphy.gif',          \r\n  'https://i.imgur.com/7IkBpQ5.gif',          \r\n  'https://i.pinimg.com/originals/72/80/ee/7280eedf85ea5d674c22c5959d6e86cb.gif',          \r\n  'https://cdn.vox-cdn.com/uploads/chorus_asset/file/8692949/no_words_homer_into_brush.gif',          \r\n  'https://media1.giphy.com/media/3oFyDpijVlI0bSoB8Y/giphy.gif',          \r\n  'https://media3.giphy.com/media/l1IY5J4Cfw8JLi40M/giphy.gif',          \r\n  'https://media.giphy.com/media/ceeN6U57leAhi/giphy.gif',          \r\n  'http://www.quickmeme.com/img/c1/c113dcffa98ea14ebafe0fe466e748db187912a1a3ed1307f350d457b10eaa2f.jpg',\r\n  'https://i.imgflip.com/142vwg.jpg'          \r\n]\r\n\r\nexport default fail","import React, { Component } from 'react'\n\n// Components\nimport Title from './components/Title'\nimport RealBtn from './components/RealBtn'\nimport FakeBtn from './components/FakeBtn'\nimport Progress from './components/Progress'\nimport Start from './components/Start'\nimport Timer from './components/Timer'\nimport GameOver from './components/GameOver'\nimport StartMeme from './components/StartMemes'\nimport FailMeme from './components/FailMemes'\n\n// Packages\nimport axios from 'axios';\nimport Randomize from 'unique-random'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n \n    this.state = {\n       posts: [],\n       title: '',\n       image: '',\n       subreddit: '',\n       count: 0,\n       url: '',\n       timer: '',\n       gameOver: false,\n       start: false,\n       startMemes: StartMeme[Math.floor(Math.random() * StartMeme.length )],\n       endMemes: FailMeme[Math.floor(Math.random() * FailMeme.length )],\n       render: false\n    }\n    this.handleFakeBtn = this.handleFakeBtn.bind(this)\n    this.handleRealBtn = this.handleRealBtn.bind(this)\n    this.handleStart = this.handleStart.bind(this)\n    this.handleTryAgain = this.handleTryAgain.bind(this)\n  }\n  \n  // Click function for choosing fake news\n  handleFakeBtn (evt) {\n    let randomizer = Randomize(1, 25)\n    if (this.state.subreddit === 'TheOnion') {\n      this.setState({ count: this.state.count + 1 })\n    } else {\n      this.setState({ count: 0, gameOver: true })\n    }\n    let newPost = this.state.posts[randomizer()]\n    console.log(randomizer())\n    this.setState({\n      title: newPost.data.title,\n      image: `${newPost.data.thumbnail}`,\n      subreddit: newPost.data.subreddit\n    })\n  }\n\n  // Click function for choosing real news\n  handleRealBtn (evt) {\n    let randomizer = Randomize(1, 25)\n    if (this.state.subreddit === 'nottheonion') {\n      this.setState({ count: this.state.count + 1 })\n    } else {\n      this.setState({ count: 0, gameOver: true  })\n    }\n    let newPost = this.state.posts[randomizer()]\n    console.log(randomizer())\n    this.setState({\n      title: newPost.data.title,\n      image: `${newPost.data.thumbnail}`,\n      subreddit: newPost.data.subreddit\n    })\n  }\n\n  // Click button for starting the game\n  handleStart (evt) {\n    let randomizer = Randomize(1, this.state.posts.length)\n    console.log(randomizer())\n    let myArr = this.state.posts\n    let randPost = myArr[randomizer()]\n    this.setState({\n      start: true,\n      title: randPost.data.title,\n      image: `${randPost.data.thumbnail}`,\n      subreddit: randPost.data.subreddit\n    })\n  }\n\n  handleTryAgain () {\n    window.location.reload(true)\n  }\n\n  // Get data from both subreddits and put it in the state under posts\n  componentDidMount () {\n    axios.get('https://www.reddit.com/r/TheOnion+nottheonion.json')\n      .then(response => {\n        let myArr = response.data.data.children\n        this.setState({\n          posts: myArr,\n        })\n      })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        {/* ternary to start the game and also if the user chose wrong */}\n        {this.state.start ? this.state.gameOver ?\n\n        // Renders if user chooses incorrectly \n        <GameOver handleTryAgain={this.handleTryAgain} \n                  endMemes={this.state.endMemes} /> \n        : \n        // Renders the game\n        <div className='container is-mobile'>\n            <Title image={this.state.image} title={this.state.title} />\n              <div className='section' style={{ padding: '10px 0 10px 0' }}>\n                <div className='columns is-centered'>\n                  <div className='column' />\n                    <RealBtn handleRealBtn={this.handleRealBtn} />\n                    <FakeBtn handleFakeBtn={this.handleFakeBtn} />\n                  <div className='column' />\n                </div>\n              </div>\n            <Progress count={this.state.count} all={this.state.posts.length} />\n        </div> \n        : \n        // Renders Modal to begin the game\n        <Start start={this.handleStart} memes={this.state.startMemes} />}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Components\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById('root'))\n"],"sourceRoot":""}